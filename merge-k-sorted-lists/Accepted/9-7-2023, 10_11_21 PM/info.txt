{"id":1043193925,"lang":"cpp","lang_name":"C++","time":"2 months, 4 weeks","timestamp":1694104881,"status":10,"status_display":"Accepted","runtime":"129 ms","url":"/submissions/detail/1043193925/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"13.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        if(lists.size() == 0)\n            return NULL;\n\n        if(lists.size() == 1)\n            return lists.at(0); \n\n        ListNode* new_list = NULL;\n        ListNode* dummy_list;\n        ListNode* tmp;\n\n        for(ListNode* list : lists){\n            if(!list){\n                continue;\n            }\n\n            if(new_list && (new_list->val < list->val)){\n                tmp = new ListNode(new_list->val);\n                new_list = new_list->next;\n            }\n            else{\n                tmp = new ListNode(list->val);\n                list = list->next;\n            }\n            dummy_list = tmp;\n\n            while(new_list && list){\n                if(new_list->val >= list->val){\n                    tmp->next = list;\n                    list = list->next;\n                }\n                else {\n                    tmp->next = new_list;\n                    new_list = new_list->next;\n                }\n                tmp = tmp->next;\n            }\n\n            if(!list){\n                tmp->next = new_list;\n            }\n            if(!new_list){\n                tmp->next = list;\n            }\n            new_list = dummy_list;\n\n        }\n\n        return new_list;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}