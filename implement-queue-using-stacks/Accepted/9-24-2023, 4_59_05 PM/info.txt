{"id":1057858570,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1695554945,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1057858570/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"7.3 MB","code":"class MyQueue {\n    stack<int> s1;\n    stack<int> s2;\n    int top;\npublic:\n    MyQueue() {\n        \n    }\n    \n    void push(int x) {\n        if(s1.empty()){\n            top =x;\n            s1.push(x);\n        }\n        else{\n            s1.push(x);\n        }\n    }\n    \n    int pop() {\n        int item = top;\n        while(!s1.empty()){\n            if(top != s1.top()){\n                s2.push(s1.top());\n                s1.pop();\n            }\n            else{\n                s1.pop();\n            }\n        }\n        while(!s2.empty()){\n            if(!s1.empty()){\n                s1.push(s2.top());\n                s2.pop();\n            }\n            else{\n                top = s2.top();\n                s1.push(s2.top());\n                s2.pop();               \n            }\n        }\n        return item;\n    }\n    \n    int peek() {\n        return top;\n    }\n    \n    bool empty() {\n        if(s1.empty()){\n            return true;\n        }\n        return false;\n    }\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue* obj = new MyQueue();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->peek();\n * bool param_4 = obj->empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}