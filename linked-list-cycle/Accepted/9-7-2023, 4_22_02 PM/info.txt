{"id":1042947215,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1694083922,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1042947215/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        struct ListNode* tmp = head;\n \n        while(tmp != NULL && tmp->next != NULL){\n\n            head = head->next;\n            tmp = tmp->next->next;\n\n            if(head == tmp){\n                return true;\n            }\n            \n        }\n        return false;\n    }\n};\n","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}