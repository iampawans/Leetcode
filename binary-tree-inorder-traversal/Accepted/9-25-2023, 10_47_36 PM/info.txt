{"id":1058955984,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1695662256,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1058955984/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"10.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> in;\n        if(root == NULL){\n            return in;\n        }\n        auto v1 = inorderTraversal(root->left);\n        in.insert(in.end(), v1.begin(), v1.end());\n        in.push_back(root->val);\n        auto v2 = inorderTraversal(root->right);\n        in.insert(in.end(), v2.begin(), v2.end());\n        return in;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}