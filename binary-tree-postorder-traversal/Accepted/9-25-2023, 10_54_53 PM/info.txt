{"id":1058962816,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1695662693,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1058962816/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"10.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> post;\n        if(root == NULL){\n            return post;\n        }\n\n        //Left->Right->Root\n        auto v1 = postorderTraversal(root->left);\n        post.insert(post.end(), v1.begin(), v1.end());\n        auto v2 = postorderTraversal(root->right);\n        post.insert(post.end(), v2.begin(), v2.end());\n        post.push_back(root->val);\n\n        return post;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}