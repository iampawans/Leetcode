{"id":1075043098,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1697296119,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1075043098/","is_pending":"Not Pending","title":"Combination Sum","memory":"11.1 MB","code":"class Solution {\npublic:\n    bool isSafe(int index, vector<int>& candidates, int target){\n        if(index < candidates.size() && target-candidates[index] >=0){\n            return true;\n        }\n        return false;\n    }\n\n    void solveCombinationSum(int index, vector<int>& candidates, int target, vector<int> &combination, vector<vector<int>> &result){\n\n        // Base condition\n        if(target == 0){\n            result.push_back(combination);\n            return;\n        }\n\n        while(isSafe(index, candidates, target)){\n            combination.push_back(candidates[index]);\n            solveCombinationSum(index, candidates, target-candidates[index], combination, result);\n            ++index;\n            combination.pop_back();\n        }\n    }\n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\n        sort(candidates.begin(), candidates.end());\n        vector<vector<int>> result;\n        vector<int> combination;\n\n        solveCombinationSum(0, candidates, target, combination, result);\n        return result;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}