{"id":1111999139,"lang":"cpp","lang_name":"C++","time":"2 days, 4 hours","timestamp":1701674474,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1111999139/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"14 MB","code":"class Solution {\npublic:\n    int firstOccurance(vector<int>& nums, int target){\n        int start = 0;\n        int end = nums.size()-1;\n\n        int first = -1;\n        int mid = start + (end-start)/2;\n        while(start <= end){\n            if(nums[mid] == target){\n                first = mid;\n                end = mid -1;\n            }\n            else if(nums[mid] > target){\n                end = mid -1;\n            }\n            else{\n                start = mid+1;\n            }\n            mid = start + (end-start)/2;\n        }\n        return first;\n    }\n\n    int lastOccurance(vector<int>& nums, int target){\n        int start = 0;\n        int end = nums.size()-1;\n\n        int last = -1;\n        int mid = start + (end-start)/2;\n        while(start <= end){\n            if(nums[mid] == target){\n                last = mid;\n                start = mid +1;\n            }\n            else if(nums[mid] > target){\n                end = mid -1;\n            }\n            else{\n                start = mid+1;\n            }\n            mid = start + (end-start)/2;\n        }\n        return last;\n    }\n\n    vector<int> searchRange(vector<int>& nums, int target) {\n        vector<int> res;\n        res.push_back(firstOccurance(nums, target));\n        res.push_back(lastOccurance(nums, target));\n\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}