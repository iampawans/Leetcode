{"id":536362958,"lang":"cpp","lang_name":"C++","time":"2 years, 3 months","timestamp":1628612223,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/536362958/","is_pending":"Not Pending","title":"Group Anagrams","memory":"20.9 MB","code":"class Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        \n        //[\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n        // Use map where key is sorted string and value is string of the input vector\n        // ex : key = aet and value = \"eat\",\"tea\",\"ate\"\n        \n        std::map<std::string, std::vector<std::string>> mp;\n        \n        vector<vector<string>> anagram;\n        \n        for(auto val : strs)\n        {\n            std::string tmp;\n            tmp = val;\n            sort(val.begin(), val.end());\n            mp[val].push_back(tmp);\n        }\n        \n        for(auto m : mp)\n        {\n            anagram.push_back(m.second);\n        }\n        \n        return anagram;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}