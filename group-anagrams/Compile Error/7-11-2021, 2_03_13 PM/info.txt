{"id":520701877,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1625992393,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/520701877/","is_pending":"Not Pending","title":"Group Anagrams","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        \n        int size = strs.size();\n        vector<vector<string>> anagram;\n        \n        if(size >1)\n        {\n        \n        for(int i = size-1; i >= 0 ; i--)\n        {\n            set<string> aset;\n            vector<string> vec;\n            for(int j =size-1; j >=0 ; j--)\n            {\n                string s1 = strs[i];\n                string s2 = strs[j];\n                if(s1 == \"\" and s2 == \"\")\n                {\n                    vec.push_back(s1);\n                    vec.push_back(s2);\n                    return anagram.push_back(vec);\n                }\n                \n                sort(s1.begin(), s1.end());\n                sort(s2.begin(), s2.end());\n                \n                if(s1 == s2)\n                {\n                    aset.insert(strs[i]);\n                    aset.insert(strs[j]);\n                }\n                else\n                {\n                    aset.insert(strs[i]);\n                }\n            }\n            vec(aset.begin(),aset.end());\n            if(find(anagram.begin(),anagram.end(),vec) == anagram.end())\n                anagram.push_back(vec);\n        }\n        }\n        else\n        {\n            anagram.push_back(strs);\n        }\n        return anagram;\n        \n    }\n};","compare_result":null,"title_slug":"group-anagrams","has_notes":false,"flag_type":1}