{"id":536409967,"lang":"cpp","lang_name":"C++","time":"2 years, 3 months","timestamp":1628618366,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/536409967/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        \n        //babad \n        //insert to set. if found in set, update char str and pos.\n        // last elementt and pos is found.\n        \n        \n        std::unordered_set<char> st;\n        int size = s.length();\n        int pos; char str;\n        std::string palindrom;\n        \n        if(s.empty())\n            return \"\";\n        \n        if((size <=2) and (s[0] != s[1])\n        {\n            std::string tmp;\n            tmp=s[0];\n            return tmp;\n        }\n        \n        for(int i=0; i< size;i++)\n        {\n            if(st.find(s[i]) == st.end())\n            {\n                st.insert(s[i]);\n            }\n            else\n            {\n                str = s[i];\n                pos = i;\n            }\n            \n        }\n        \n        \n        size_t found = s.find(str);\n        if(found != std::string::npos)\n        {\n            palindrom = s.substr(found,pos);\n        }\n            \n        return palindrom;\n        \n    }\n};","compare_result":null,"title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}