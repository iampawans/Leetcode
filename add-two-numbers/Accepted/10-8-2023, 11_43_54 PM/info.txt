{"id":1070332844,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1696788834,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1070332844/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        if(l1 == NULL && l2 == NULL){\n            return NULL;\n        }\n\n        ListNode* res = new ListNode();\n        ListNode* dummy = res;\n        int rem = 0;\n\n        //till l1 nad l2 contains node\n        while(l1 != NULL && l2 != NULL){\n\n            // Quotient (2+5+0)%10 = 7\n            int quotient = (l1->val + l2->val + rem) % 10; //(2+5+0)%10, (4+6+0)%10, (3+4+1)%10\n            // Reaminder (2+5+0)/10 = 0\n            rem = (l1->val + l2->val + rem) / 10; //(2+5+0)/10, (4+6+0)/10, (3+4+1)/10\n            \n            ListNode* temp = new ListNode(quotient);\n            res->next = temp;\n            res = res->next;\n            l1 = l1->next;\n            l2 = l2->next;\n        }\n\n        // if l1 still contains node\n        while(l1 != NULL){\n            int quotient = (l1->val + rem) % 10;\n            rem = (l1->val + rem) / 10;\n            ListNode* temp = new ListNode(quotient);\n            res->next = temp;\n            res = res->next;\n            l1 = l1->next;\n        }\n\n        // if l2 still contains node\n        while(l2 != NULL){\n            int quotient = (l2->val + rem) % 10;\n            rem = (l2->val + rem) / 10;\n            ListNode* temp = new ListNode(quotient);\n            res->next = temp;\n            res = res->next;\n            l2 = l2->next;\n        }\n\n        // if remainder has some value then craete new node\n        if(rem > 0){\n            ListNode* temp = new ListNode(rem);\n            res->next = temp;\n            res = res->next;            \n        }\n        return dummy->next;\n    }\n};","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"flag_type":1}