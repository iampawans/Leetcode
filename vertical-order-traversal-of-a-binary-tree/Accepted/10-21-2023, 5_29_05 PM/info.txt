{"id":1080552766,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1697889545,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1080552766/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        vector<vector<int>> result;\n        std::map<int, map<int, vector<int>>> mp;\n        if(root == NULL){\n            return result;\n        }\n        \n        //int col = 0;\n        queue<pair<int, pair<int, TreeNode*>>> q;\n        q.push(make_pair(0, make_pair(0, root)));\n\n        while(!q.empty()){\n            \n            auto node = q.front();\n            q.pop();\n\n            int row = node.first;\n            int col = node.second.first;\n            auto tmpNode = node.second.second;\n\n            mp[col][row].push_back(tmpNode->val);\n            std::sort(mp[col][row].begin(), mp[col][row].end());\n            \n            if(tmpNode->left){\n                q.push(make_pair(row+1, make_pair(col-1, tmpNode->left)));\n            }\n            if(tmpNode->right){\n                q.push(make_pair(row+1, make_pair(col+1, tmpNode->right)));\n            }\n        }\n        for(auto entries : mp){\n            vector<int> tmp;\n            for(auto i : entries.second){\n                for(auto j : i.second){\n                    tmp.push_back(j);\n                }\n            }\n            result.push_back(tmp);\n        }\n        return result;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"flag_type":1}