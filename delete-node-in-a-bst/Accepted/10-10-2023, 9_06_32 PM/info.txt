{"id":1071899846,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1696952192,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1071899846/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"32.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if(root == NULL){\n            return NULL;\n        }\n\n        TreeNode* temp = root;\n        if(key > temp->val){\n            temp->right = deleteNode(temp->right, key);\n        }\n        else if(key < temp->val){\n            temp->left = deleteNode(temp->left, key);\n        }\n        else{\n            //if 0 child\n            if(temp->right == NULL && temp->left == NULL){\n                return NULL;\n            }\n            //if 1 child\n            if(temp->right == NULL || temp->left == NULL){\n                return temp->right ? temp->right : temp->left;\n            }\n\n            //if 2 child, replace the node with either max of left or min of right tree.\n            //here travel in left and find max node\n            TreeNode* maxNode = temp->left;\n            while(maxNode->right != NULL){\n                maxNode = maxNode->right; \n            }\n            temp->val = maxNode->val;     \n            temp->left = deleteNode(temp->left, maxNode->val); \n\n            /*\n            TreeNode* minNode = temp->right;\n            while(maxNode->left != NULL){\n                minNode = minNode->left; \n            }\n            temp->val = minNode->val;     \n            temp->right = deleteNode(temp->right, minNode->val); \n            */\n        }\n        \n        return root;\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}