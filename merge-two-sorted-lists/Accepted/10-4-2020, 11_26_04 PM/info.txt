{"id":404460081,"lang":"cpp","lang_name":"C++","time":"3 years, 2 months","timestamp":1601834164,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/404460081/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"15.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        \n\n        ListNode* temp;\n        ListNode* nd;\n        \n        if(!l1)\n            return l2;\n        if(!l2)\n            return l1;     \n        \n        // fill temp with the first node\n        if(l1->val < l2->val)\n        {\n            temp = new ListNode(l1->val, l1->next);\n            l1 = l1->next;\n        }\n        else\n        {\n            temp = new ListNode(l2->val, l2->next);\n            l2 = l2->next;            \n        }\n        \n        nd = temp;\n\n        //assign the temp with the sorted data\n        while(l1 && l2)\n        {\n            if(l1->val < l2->val)\n            {\n                temp->next = l1;\n                l1 = l1->next;\n            }\n            else\n            {\n                temp->next = l2;\n                l2 = l2->next;\n            }\n            temp = temp->next;\n        }\n        \n        temp->next = l1 ? l1:l2;\n        return nd;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}