{"id":1077323019,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1697526114,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1077323019/","is_pending":"Not Pending","title":"N-Queens","memory":"N/A","code":"class Solution {\npublic:\n    bool isSafe(int row, int col, vector<vector<char>> &board, int n){\n        int x = row;\n        int y = col;\n\n        //check row\n        while(y >= 0){\n            if(board[x][y] == 'Q'){\n                return false;\n            }\n            y--;\n        }\n\n        //check down diagonal\n        x = row;\n        y = col;\n        while(x<n && y >=0){\n           if(board[x][y] == 'Q'){\n                return false;\n            }\n            y--;\n            x++;\n        }\n\n        //check up diagonal\n        x = row;\n        y = col;\n        while(x>=0 && y >=0){\n           if(board[x][y] == 'Q'){\n                return false;\n            }\n            y--;\n            x--;\n        }\n        return true;\n    }\n    void solve(int col, int n, vector<vector<char>> &board, vector<vector<string>> &result){\n        //Base condition\n        if(col == n){\n            vector<string> tmp1;\n            for(int i=0; i<n; i++){\n                string tmp;\n                for(int j=0; j<n; j++){\n                    tmp.push_back(board[i][j]);\n                }\n                tmp1.push_back(tmp);\n            }\n            \n            result.push_back(tmp1);\n            return;\n        }\n\n        for(int row=0; row<n; row++){\n            if(isSafe(row, col, board, n)){\n                //Place Queen if safe\n                board[row][col] = 'Q';\n                solve(col +1, n, board, result, visited);\n                board[row][col] = '.'; // Backtracking\n            }\n        }\n    }\n\n    vector<vector<string>> solveNQueens(int n) {\n        vector<vector<char>> board(n, vector<char>(n, '.'));\n        vector<vector<string>> result;\n        //vector<string> tmp;\n\n        solve(0, n, board, result);\n\n        return result;\n    }\n};","compare_result":null,"title_slug":"n-queens","has_notes":false,"flag_type":1}