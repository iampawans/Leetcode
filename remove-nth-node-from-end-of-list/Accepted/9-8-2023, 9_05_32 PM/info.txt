{"id":1044010397,"lang":"cpp","lang_name":"C++","time":"2 months, 4 weeks","timestamp":1694187332,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1044010397/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"10.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        int count = 0;\n        std::stack<ListNode*> st;\n\n        while(head){\n            cout << \"Push Stack : \" << head->val << endl;\n            st.push(head);\n            head = head->next;\n        }\n\n        ListNode* tmp;\n        ListNode* prev;\n        while(!st.empty()){\n            cout << \"Inside While\" << endl;\n            count++;\n            tmp = st.top();\n            cout << \"Pop Stack : \" << tmp->val << endl;\n            st.pop();\n            if(count == n){\n                prev = tmp->next;\n                //cout << \"Pop Stack when at pos : \" << prev->val << endl;\n                if(st.empty()){\n                    return prev;\n                }\n                continue;\n            }\n            if(count == (n+1)){\n                tmp->next = prev;\n                //cout << \"Pop Stack when at next pos : \" << prev->val << \" \" << tmp->val<< endl;\n            }         \n        }\n        return tmp;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list","has_notes":false,"flag_type":1}