{"id":1075773181,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1697364919,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1075773181/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"12 MB","code":"class Solution {\npublic:\n    void solveGenerateParenthesis(int open, int close, int n, vector<string> &result, string &tmp){\n        //Base condition\n        if(tmp.length() == n*2){\n            result.push_back(tmp);\n            return;\n        }\n        \n        //Push '(' for n times\n        if(open < n) {\n            tmp.push_back('(');\n            solveGenerateParenthesis(open+1, close, n, result, tmp);\n            tmp.pop_back();\n        }\n\n        ////close '(' with ')'\n        if(close <open) {\n            tmp.push_back(')');\n            solveGenerateParenthesis(open, close+1, n, result, tmp);\n            tmp.pop_back();\n        }\n\n    }\n    vector<string> generateParenthesis(int n) {\n        vector<string> result;\n        string tmp;\n\n        map<char,char> pSet;\n        pSet.insert({')','('});\n\n        solveGenerateParenthesis(0, 0, n, result, tmp);\n\n        return result;\n    }\n};","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}